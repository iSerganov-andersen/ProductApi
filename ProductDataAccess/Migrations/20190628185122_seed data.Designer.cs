// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductDataAccess;

namespace ProductDataAccess.Migrations
{
    [DbContext(typeof(AwesomeDbContext))]
    [Migration("20190628185122_seed data")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductCore.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = new Guid("e87be121-59e5-43a3-a09b-6e8e0d6afabe"), Name = "Food" },
                        new { Id = new Guid("ecf61ca2-eb9c-4ba3-b283-0badd8a6547b"), Name = "Electronics" },
                        new { Id = new Guid("7a36367e-95b3-498b-a95b-43d53952e04b"), Name = "Cars" }
                    );
                });

            modelBuilder.Entity("ProductCore.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = new Guid("3ae81e5e-7084-4eeb-ab72-75e5d9022607"), CategoryId = new Guid("e87be121-59e5-43a3-a09b-6e8e0d6afabe"), IsActive = true, Name = "Milk GMZ", Price = 9.99m },
                        new { Id = new Guid("03f1457b-219b-4d22-be20-111f79301717"), CategoryId = new Guid("ecf61ca2-eb9c-4ba3-b283-0badd8a6547b"), IsActive = true, Name = "TV Samsung 40\"", Price = 2999.99m },
                        new { Id = new Guid("cf66b994-4155-4373-8d7f-d297ffc4bbcb"), CategoryId = new Guid("7a36367e-95b3-498b-a95b-43d53952e04b"), IsActive = true, Name = "Toyota Tundra V8 4.7L", Price = 64999.99m }
                    );
                });

            modelBuilder.Entity("ProductCore.Entities.Product", b =>
                {
                    b.HasOne("ProductCore.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}

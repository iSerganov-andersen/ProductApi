// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductDataAccess;

namespace ProductDataAccess.Migrations
{
    [DbContext(typeof(AwesomeDbContext))]
    [Migration("20190707201346_Primary keys")]
    partial class Primarykeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductCore.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = new Guid("c94ff890-a18c-497b-9c4e-48918594dbf5"), Name = "Food" },
                        new { Id = new Guid("64560d29-fa1d-4e9d-8b74-7f760b74985b"), Name = "Electronics" },
                        new { Id = new Guid("d752edae-2e55-44db-802a-c3b9c6c5d5c9"), Name = "Cars" }
                    );
                });

            modelBuilder.Entity("ProductCore.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = new Guid("607ecc78-1ce4-4edc-bcce-541e2776416e"), CategoryId = new Guid("c94ff890-a18c-497b-9c4e-48918594dbf5"), IsActive = true, Name = "Milk GMZ", Price = 9.99m },
                        new { Id = new Guid("26bfc2de-3fd8-408e-b6ea-f97d4145088c"), CategoryId = new Guid("64560d29-fa1d-4e9d-8b74-7f760b74985b"), IsActive = true, Name = "TV Samsung 40\"", Price = 2999.99m },
                        new { Id = new Guid("9276a4b5-a2fe-4abd-8b3f-acd289b89bdc"), CategoryId = new Guid("d752edae-2e55-44db-802a-c3b9c6c5d5c9"), IsActive = true, Name = "Toyota Tundra V8 4.7L", Price = 64999.99m }
                    );
                });

            modelBuilder.Entity("ProductCore.Entities.Product", b =>
                {
                    b.HasOne("ProductCore.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
